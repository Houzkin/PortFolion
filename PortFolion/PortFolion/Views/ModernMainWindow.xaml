<Controls:MetroWindow x:Class="PortFolion.Views.ModernMainWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                  xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:PortFolion.Views"
        xmlns:vm="clr-namespace:PortFolion.ViewModels"
                  mc:Ignorable="d" 
                  d:DesignHeight="200" d:DesignWidth="500"
                  TitleCaps="False"
                  Title="PortFolion" >

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう 
        Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります 
        Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています--> 

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>
    <Window.Resources>
        <ItemsControl x:Key="EditMenus" x:Shared="false">
            <MenuItem Header="foo"/>
            <MenuItem Header="bar" />
            <MenuItem Header="baz"/>
        </ItemsControl>
    </Window.Resources>

    <DockPanel LastChildFill="False">
        <Menu DockPanel.Dock="Top" Background="{x:Null}" >
            <Menu.Foreground>
                <SolidColorBrush Color="Black"/>
            </Menu.Foreground>
            <MenuItem Header="編集" ItemsSource="{Binding Source={StaticResource EditMenus}, Path=Items}"/>
        </Menu>
        <!--<ListView>
            <ContextMenuService.ContextMenu>
                <ContextMenu ItemsSource="{Binding Source={StaticResource EditMenus}, Path=Items}"/>
            </ContextMenuService.ContextMenu>
            <Ellipse Width="100" Height="100" Fill="Red"/>
        </ListView>-->
        <StatusBar Height="23" Margin="0,0,0,0" Name="StatusBar1" Background="#FF2CCCF0" VerticalAlignment="Bottom" HorizontalContentAlignment="Stretch" >
            
            <StatusBarItem DockPanel.Dock="Left" Width="150" HorizontalContentAlignment="Stretch">Item1</StatusBarItem>

            <StatusBarItem HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">パネル１</StatusBarItem>
        </StatusBar>

    </DockPanel>
</Controls:MetroWindow>
