<mah:MetroWindow x:Class="PortFolion.Views.ModernMainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                xmlns:v="clr-namespace:PortFolion.Views"
                xmlns:vc="clr-namespace:PortFolion.Views.Controls"
                xmlns:vm="clr-namespace:PortFolion.ViewModels"
                mc:Ignorable="d" SaveWindowPosition="True"
                GlowBrush="{DynamicResource AccentColorBrush}" BorderThickness="1"
                d:DesignHeight="200" d:DesignWidth="500" 
                TitleCaps="False"
                Icon="/Portfolion;component/PortFolion.ico"
                Title="PortFolion" >

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう 
        Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります 
        Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています-->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <mah:WindowCommands.Resources>
                <!--<Style TargetType="mah:DropDownButton">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{x:Null}"/>
                            <Setter Property="Opacity" Value="1.0"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>-->
            </mah:WindowCommands.Resources>
           
            <mah:DropDownButton Content="Menu" Background="{x:Null}" BorderBrush="{x:Null}" ItemsSource="{Binding MenuCollection}" Opacity="0.5">
                <mah:DropDownButton.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding Header}"/>
                        <Setter Property="Command" Value="{Binding MenuCommand}"/>
                    </Style>
                </mah:DropDownButton.ItemContainerStyle>
            </mah:DropDownButton>

            <!--<vc:DropDownMenuButton Width="120" Height="32" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF424242">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Menu" />
                    <Path Width="8" Height="6" Margin="8,0,0,0" Stretch="Fill" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type vc:DropDownMenuButton}},Path=Foreground}" Data="F1 M 57.5692,88L 99.1384,16L 16,16L 57.5692,88 Z "/>
                </StackPanel>
                <vc:DropDownMenuButton.DropDownContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Item one" />
                        <Separator />
                        <MenuItem Header="Item two" />
                    </ContextMenu>
                </vc:DropDownMenuButton.DropDownContextMenu>
            </vc:DropDownMenuButton>-->
            <ToggleButton Content="License" IsChecked="{Binding IsOpen,ElementName=LicenseFlyout}"/>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>

    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:Flyout x:Name="LicenseFlyout" IsModal="False" Header="License" Position="Right" AnimateOpacity="True" Opacity="0.9">
                <v:LicenseView />
            </mah:Flyout>
            <mah:Flyout x:Name="MenuFlyout" IsModal="False" Header="Menu" Position="Top" AnimateOpacity="True">
                <Grid></Grid>
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <!--<RowDefinition x:Name="ContentSpace" Height="Auto" />-->
        </Grid.RowDefinitions>
        <Grid.Resources>
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
        </Grid.Resources>

        <mah:MetroAnimatedSingleRowTabControl x:Name="MainTabControl" TabStripPlacement="Left" mah:TabControlHelper.IsUnderlined="True" >
            <mah:MetroAnimatedSingleRowTabControl.Resources>
                <Style BasedOn="{StaticResource {x:Type TabItem}}" TargetType="{x:Type mah:MetroTabItem}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentPresenter Content="{TemplateBinding Content}">
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform Angle="270" />
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </mah:MetroAnimatedSingleRowTabControl.Resources>
            <mah:MetroTabItem Header="Graph ">
                <v:GraphTab/>
            </mah:MetroTabItem>
            <mah:MetroTabItem Header="Edit ">
                <v:ListTab />
            </mah:MetroTabItem>
        </mah:MetroAnimatedSingleRowTabControl>

    </Grid>
</mah:MetroWindow>
