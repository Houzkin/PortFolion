<mah:MetroWindow x:Class="PortFolion.Views.AccountEditWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                 xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
                 xmlns:v="clr-namespace:PortFolion.Views"
                 xmlns:vm="clr-namespace:PortFolion.ViewModels"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:ddmb="clr-namespace:DropDownMenuButton;assembly=DropDownMenuButton"
                 x:Name="editWindow"
                 mc:Ignorable="d" SaveWindowPosition="False"
                 GlowBrush="{DynamicResource AccentColorBrush}" BorderThickness="1"
                 Title="AccountEdit" Height="500" Width="800">
    
    <!--<Window.DataContext>
        <vm:AccountEditWindowViewModel/>
    </Window.DataContext>-->
    
    <!--<mah:MetroWindow.CommandBindings>
        <CommandBinding Command="OpenFlyoutCommand" Executed="CommandBinding_Executed"/>
    </mah:MetroWindow.CommandBindings>-->

     <i:Interaction.Triggers>
     
     	<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <!--<i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>-->

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
         
        <l:InteractionMessageTrigger MessageKey="EditNodeName" Messenger="{Binding Messenger}">
            <ei:ChangePropertyAction TargetName="NameEditFlyout" PropertyName="IsOpen" Value="true"/>
        </l:InteractionMessageTrigger>
         
        <l:InteractionMessageTrigger MessageKey="EditEndNodeName" Messenger="{Binding Messenger}">
            <ei:ChangePropertyAction TargetName="NameEditFlyout" PropertyName="IsOpen" Value="false"/>
        </l:InteractionMessageTrigger>
         
        <l:InteractionMessageTrigger MessageKey="CloseAsTrue" Messenger="{Binding Messenger}">
            <ei:ChangePropertyAction TargetName="editWindow" PropertyName="DialogResult" Value="true"/>
        </l:InteractionMessageTrigger>
         
        <!--<l:InteractionMessageTrigger MessageKey="CloseAsFalse" Messenger="{Binding Messenger}">
            <ei:ChangePropertyAction TargetName="{Binding ElementName=editWindow}" PropertyName="DialogResult" Value="false"/>
        </l:InteractionMessageTrigger>-->

    </i:Interaction.Triggers>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:Flyout x:Name="NameEditFlyout"
                        IsModal="True"
                        Header="名前の変更"
                        Position="Right"
                        CloseCommand="{Binding NodeNameEditer.CancelCmd}"
                        AnimateOpacity="True">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="{Binding NodeNameEditer.PresentName}" HorizontalAlignment="Center"/>
                    <TextBox  Text="{Binding NodeNameEditer.Name}" HorizontalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="Cancel" Command="{Binding NodeNameEditer.CancelCmd}" HorizontalAlignment="Right"/>
                        <Button Content="OK" Command="{Binding NodeNameEditer.ExecuteCmd}" HorizontalAlignment="Right"/>
                    </StackPanel>
                </StackPanel>
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5">
            <TextBlock Text="{Binding CurrentDate, StringFormat=yyyy年 M月 d日 (ddd)}" FontSize="40"/>
        </StackPanel>
        <WrapPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center">
            <StackPanel Orientation="Horizontal" Margin="0,0,30,0">
            <StackPanel Orientation="Horizontal" Margin="0,0,30,0"><!--StringFormat=”{0} :”-->
                <TextBlock Text="{Binding CashElement.Name, StringFormat={}{0} :}" Margin="5" FontSize="15" VerticalAlignment="Bottom"/>
                <TextBox Text="{Binding CashElement.Amount,UpdateSourceTrigger=PropertyChanged}" Margin="5,1,1,1" FontSize="25" VerticalAlignment="Bottom" MinWidth="120"/>
            </StackPanel>
                <TextBlock Text="内、当日入(+)・出(-)金額 :" Margin="5" FontSize="12" VerticalAlignment="Bottom"/>
                <TextBox Text="{Binding CashElement.InvestmentValue}" Margin="5,1,1,1" FontSize="25" VerticalAlignment="Bottom" MinWidth="120"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="総評価額 :" Margin="5" FontSize="15" VerticalAlignment="Bottom"/>
                <TextBlock Text="{Binding TemporaryAmount}" Margin="10,1,1,1" FontSize="25" VerticalAlignment="Bottom"/>
            </StackPanel>
        </WrapPanel>
        <Grid Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center">
            <Button Content="単価更新" Margin="5,10,5,0" Command="{Binding ApplyCurrentPerPrice}"/>
        </Grid>
        <DataGrid Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Elements}" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="銘柄・ポジション" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Code}" Margin="0,0,5,0"/>
                                <TextBlock Text="{Binding Name}" Margin="5,0,0,0"/>
                                <ddmb:DropDownMenuButton Margin="3" Style="{DynamicResource MetroToggleButton}">
                                    <TextBlock Text="編"/>
                                    <ddmb:DropDownMenuButton.DropDownContextMenu>
                                        <ContextMenu ItemsSource="{Binding MenuList}">
                                            <ContextMenu.ItemContainerStyle>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Header" Value="{Binding Header}"/>
                                                    <Setter Property="Command" Value="{Binding MenuCommand}"/>
                                                </Style>
                                            </ContextMenu.ItemContainerStyle>
                                        </ContextMenu>
                                    </ddmb:DropDownMenuButton.DropDownContextMenu>
                                </ddmb:DropDownMenuButton>
                                <!--<Button Content="▼"/>-->
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="現在単価" Binding="{Binding CurrentPerPrice}" CanUserSort="False" IsReadOnly="{Binding IsReadOnlyPerPrice}"/>
                <DataGridTextColumn Binding="{Binding TradeQuantity}" CanUserSort="False" IsReadOnly="{Binding IsReadOnlyTradeQuantity}">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="取引数量" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Text="買付(+) / 売却(-)" FontSize="8"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding InvestmentValue}" CanUserSort="False">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="取引額" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Text="買付・入金(+) / 売却・出金(-)" FontSize="8"/>
                            </Grid>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn Header="保有数量" Binding="{Binding Quantity}" CanUserSort="False" IsReadOnly="{Binding IsReadOnlyQuantity}"/>
                <DataGridTextColumn Header="時価評価額" Binding="{Binding Amount}" CanUserSort="False"/>
            </DataGrid.Columns>
        </DataGrid>
        <Expander IsExpanded="True" Margin="5,5,10,5" Grid.Row="2" Grid.RowSpan="3" Grid.Column="0" ExpandDirection="Right" mah:ControlsHelper.ContentCharacterCasing="Normal">
            <Expander.Header>
                <TextBlock Text="新規追加" TextAlignment="Left">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="90"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>
            <TabControl mah:TabControlHelper.IsUnderlined="True">
                <TabItem Header="株式">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="110"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="DarkGray"/>
                            </Style>
                        </Grid.Resources>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Code : " HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <TextBox Grid.Row="0" Grid.Column="1" 
                                 Style="{DynamicResource SearchMetroTextBox}"
                                 Text="{Binding DummyStock.Code, UpdateSourceTrigger=PropertyChanged}"
                                 InputMethod.PreferredImeState="On"
                                 InputMethod.PreferredImeConversionMode="Alphanumeric"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"
                                 mah:TextBoxHelper.ButtonCommand="{Binding ApplySymbol,Mode=OneWay}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Name : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="1" Grid.Column="1" 
                                 Text="{Binding DummyStock.Name,UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Quantity : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding DummyStock.TradeQuantity,UpdateSourceTrigger=PropertyChanged}"
                                 InputMethod.PreferredImeState="On"
                                 InputMethod.PreferredImeConversionMode="Alphanumeric"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"/>
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Invest : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding DummyStock.InvestmentValue,UpdateSourceTrigger=PropertyChanged}"
                                 InputMethod.PreferredImeState="On"
                                 InputMethod.PreferredImeConversionMode="Alphanumeric"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"/>
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="CurrentPrice : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding DummyStock.CurrentPerPrice,UpdateSourceTrigger=PropertyChanged}"
                                 InputMethod.PreferredImeState="On"
                                 InputMethod.PreferredImeConversionMode="Alphanumeric"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"/>
                        <TextBlock Grid.Row="5" Grid.Column="0" Text="CurrentAmount : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="5" Grid.Column="1" Text="{Binding DummyStock.Amount,UpdateSourceTrigger=PropertyChanged}"
                                 InputMethod.PreferredImeState="On"
                                 InputMethod.PreferredImeConversionMode="Alphanumeric"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"/>
                        <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="クリア" Margin="5,5,5,1" Command="{Binding ClearNewStockParams}"/>
                            <Button Content="追加" Margin="5,5,1,1" Command="{Binding AddStock}"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="投信・債権">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="110"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="DarkGray"/>
                            </Style>
                        </Grid.Resources>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Name : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="0" Grid.Column="1"
                                 Text="{Binding DummyProduct.Name,UpdateSourceTrigger=PropertyChanged}"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Quantity : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding DummyProduct.Quantity,UpdateSourceTrigger=PropertyChanged}"
                                 InputMethod.PreferredImeState="On"
                                 InputMethod.PreferredImeConversionMode="Alphanumeric"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"/>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Invest : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding DummyProduct.InvestmentValue,UpdateSourceTrigger=PropertyChanged}"
                                 InputMethod.PreferredImeState="On"
                                 InputMethod.PreferredImeConversionMode="Alphanumeric"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"/>
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="CurrentPrice : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding DummyProduct.CurrentPerPrice,UpdateSourceTrigger=PropertyChanged}"
                                 InputMethod.PreferredImeState="On"
                                 InputMethod.PreferredImeConversionMode="Alphanumeric"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"/>
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="CurrentAmount : " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding DummyProduct.Amount,UpdateSourceTrigger=PropertyChanged}"
                                 InputMethod.PreferredImeState="On"
                                 InputMethod.PreferredImeConversionMode="Alphanumeric"
                                 mah:TextBoxHelper.SelectAllOnFocus="True"/>
                        <StackPanel Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="クリア" Margin="5,5,5,1" Command="{Binding ClearNewProductParams}"/>
                            <Button Content="追加" Margin="5,5,1,1" Command="{Binding AddProduct}"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        </Expander>
        <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="リセット" Command="{Binding Reset}" Margin="5,3"/>
            <Button Content="キャンセル" Margin="5,3">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <ei:ChangePropertyAction TargetName="editWindow" PropertyName="DialogResult" Value="false"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
            <Button Content="完了" Command="{Binding Apply}" Margin="5,3"/>
        </StackPanel>
    </Grid>
</mah:MetroWindow>
