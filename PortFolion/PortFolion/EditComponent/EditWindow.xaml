<mah:MetroWindow x:Class="PortFolion.Views.EditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:PortFolion.Views"
        xmlns:vm="clr-namespace:PortFolion.ViewModels"
        xmlns:model="clr-namespace:PortFolion.Models"
        xmlns:converter="clr-namespace:PortFolion.Views.Converter"
        xmlns:selector ="clr-namespace:PortFolion.Views.Selector"
        xmlns:tree="clr-namespace:System.Windows.Controls;assembly=TreeListView"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        x:Name="editWindow"
        mc:Ignorable="d" SaveWindowPosition="True"
        GlowBrush="{DynamicResource AccentColorBrush}" BorderThickness="1"
        TitleCaps="False"
        Icon="/Portfolion;component/PortFolion.ico"
        Title="PortFolion＠編集中" Height="300" Width="700">
    <i:Interaction.Triggers>
        <!--WindowのClose時、Disposeメソッドを呼び出す-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>
        
        <!--メッセンジャー経由によってWindowを終了する-->
        <l:InteractionMessageTrigger MessageKey="CloseWindow" Messenger="{Binding Messenger}">
            <ei:ChangePropertyAction TargetName="editWindow" PropertyName="DialogResult" Value="true"/>
        </l:InteractionMessageTrigger>

        <!--履歴表示Flyoutの開閉-->
        <l:InteractionMessageTrigger MessageKey="OpenHistoryFlyout" Messenger="{Binding Messenger}">
            <ei:ChangePropertyAction TargetName="HistoryFlyout" PropertyName="IsOpen" Value="true"/>
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger MessageKey="CloseHistoryFlyout" Messenger="{Binding Messenger}">
            <ei:ChangePropertyAction TargetName="HistoryFlyout" PropertyName="IsOpen" Value="false"/>
        </l:InteractionMessageTrigger>
        
        <!--編集Flyoutの開閉-->
        <l:InteractionMessageTrigger MessageKey="OpenEditFlyout" Messenger="{Binding Messenger}">
            <ei:ChangePropertyAction TargetName="EditFlyout" PropertyName="IsOpen" Value="true"/>
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger MessageKey="CloseEditFlyout" Messenger="{Binding Messenger}">
            <ei:ChangePropertyAction TargetName="EditFlyout" PropertyName="IsOpen" Value="false"/>
        </l:InteractionMessageTrigger>

    </i:Interaction.Triggers>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:FlyoutsControl.Resources>
                <s:Boolean x:Key="True">True</s:Boolean>
                <s:Boolean x:Key="False">False</s:Boolean>
            </mah:FlyoutsControl.Resources>
            <mah:Flyout x:Name="HistoryFlyout" Header="履歴" 
                        Position="Right" AnimateOpacity="True"
                        CloseCommand="{Binding History.ClosedCmd}">
                <v:HistoryView DataContext="{Binding History}"/>
            </mah:Flyout>
            <mah:Flyout x:Name="EditFlyout" Header="編集"
                        Position="Top" AnimateOpacity="True"
                        CloseCommand="{Binding EditFlyout.}" CloseCommandParameter="{StaticResource False}">
                
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
    <Grid>
        <Grid.Resources>
            <converter:PathToStringConverter x:Key="PathToString"/>
            <BooleanToVisibilityConverter x:Key="BtoVConverter"/>
            <DataTemplate x:Key="nowLoading">
                <Grid>
                    <Grid Background="DarkGray" Opacity="0.1"/>
                    <mah:ProgressRing IsActive="True"/>
                </Grid>
            </DataTemplate>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto" MinWidth="50"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*" MinWidth="50"/>
        </Grid.ColumnDefinitions>

        <Expander Grid.Column="0" IsExpanded="True" ExpandDirection="Right" mah:ControlsHelper.ContentCharacterCasing="Normal">
            <Expander.Header>
                <TextBlock Text="Date" TextAlignment="Right">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="270"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TreeView Grid.Row="0" x:Name="DateLists" ItemsSource="{Binding DateList}" Style="{StaticResource VirtualisedMetroTreeView}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
                            <Setter Property="IsExpanded" Value="{Binding IsExpand,Mode=TwoWay}"/>
                            <Setter Property="FontWeight" Value="Normal" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="model:DateTree" ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Display,UpdateSourceTrigger=PropertyChanged}" />
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

                <StackPanel Orientation="Vertical" Grid.Row="1" VerticalAlignment="Top" Margin="0" HorizontalAlignment="Center">
                    <DatePicker
                        x:Name="PickedDate"
                        Margin="5, 3" Text="{Binding SelectedDateText,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                        HorizontalAlignment="Right"
                        mah:TextBoxHelper.UseFloatingWatermark="True"
                        mah:TextBoxHelper.Watermark="Select a date" />
                    <Button Content="新規追加" HorizontalAlignment="Right"
                            Margin="5,3"
                            Command="{Binding AddNewRootCommand}"/>
                </StackPanel>
            </Grid>
        </Expander>
        <!--{Binding IsTreeLoading, Converter={StaticResource BooleanToVisibilityConverter}}-->

        <ContentControl d:IsHidden="True" Grid.Column="1" Panel.ZIndex="1"
                        Visibility="{Binding IsTreeLoading,Converter={StaticResource BtoVConverter}}"
                        ContentTemplate="{StaticResource nowLoading}"/>
        <Grid Grid.Column="1" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0">
                <TextBlock x:Name="Date" Text="{Binding CurrentDate,StringFormat=yyyy年 M月 d日 (ddd)}" FontSize="20" Margin="0,3" VerticalAlignment="Center" />
                <Button Content="{iconPacks:PackIconMaterial Kind=DeleteForever, Width=15,Height=15}" ToolTip="削除" Margin="10,0,0,0" VerticalAlignment="Center">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="DeleteCurrentDate"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
            <Menu Grid.Row="1" >
                <MenuItem Header="開" ToolTip="全て開く" Margin="3,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ExpandAllNode"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="閉" ToolTip="全て閉じる" Margin="3,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="CloseAllNode"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Margin="3,0" ToolTip="当日の株価を適用">
                    <MenuItem.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <iconPacks:PackIconMaterial Kind="Refresh" VerticalAlignment="Center"/>
                                <TextBlock Text="株価更新" VerticalAlignment="Center" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </MenuItem.HeaderTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ApplyCurrentPerPrice"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </Menu>
            <tree:TreeListView Grid.Row="2" x:Name="LocationTree" AllowsColumnReorder="True" ItemsSource="{Binding Root}">
                <tree:TreeListView.Resources>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Height" Value="16" />
                        <Setter Property="Width" Value="16" />
                        <Setter Property="Margin" Value="1" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid 
                                      Margin="{TemplateBinding Margin}"
                                      Background="Transparent">
                                        <Path x:Name="ExpandPath"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Fill="Transparent"
                                            Stroke="{DynamicResource BlackBrush}"
                                            Data="{DynamicResource TreeArrow}">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource GrayBrush1}" />
                                            <Setter TargetName="ExpandPath" Property="RenderTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource BlackBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource GrayBrush5}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled" Value="False" />
                                                <Condition Property="IsChecked" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource GrayBrush5}" />
                                        </MultiTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource AccentColorBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource MetroTreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding Path=IsExpand, Mode=TwoWay}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TreeViewItem">
                                    <!--Grid containing the current information and the subnodes.-->
                                    <StackPanel>
                                        <!--Border wrapping the content presenter.-->
                                        <Border x:Name="Bd">
                                            <!--GridViewRowPrsenter containing the current information.-->
                                            <GridViewRowPresenter Content="{TemplateBinding Header}"
                                                                  Columns="{Binding Columns, 
                                                                  RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                  AncestorType=tree:TreeListView}}"/>
                                        </Border>
                                        <!--ItemsPresenter containing the subnodes-->
                                        <ItemsPresenter x:Name="ItemsPresenter" Visibility="Collapsed"/>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <!--Trigger used to show the sub items-->
                                        <Trigger Property="IsExpanded" Value="True">
                                            <Setter TargetName="ItemsPresenter" Property="Visibility" Value="Visible"/>
                                        </Trigger>

                                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource BlackColorBrush}" />
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled" Value="False" />
                                                <Condition Property="IsSelected" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.Setters>
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            </MultiTrigger.Setters>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                                        </MultiTrigger>

                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <selector:NodeTemplateSelector x:Key="NodeTemplateSelector"/>
                    <DataTemplate x:Key="NodeTemplate" DataType="{x:Type vm:CommonNodeVM}">
                        <StackPanel Orientation="Horizontal" >
                            <tree:TreeListViewExpander x:Name="TreeExpander" Margin="3,0"/>
                            <TextBlock Text="{Binding Code}" VerticalAlignment="Center" Margin="0,0"/>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="3,0"/>
                            <!--Content="{iconPacks:PackIconMaterial Kind=LeadPencil,Width=13,Height=13}" -->
                            <mah:DropDownButton VerticalContentAlignment="Center" Content=""
                                                ItemsSource="{Binding MenuList}" >
                                <mah:DropDownButton.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Icon" Value="{Binding Icon}"/>
                                        <Setter Property="Header" Value="{Binding Header}"/>
                                        <Setter Property="Command" Value="{Binding MenuCommand}"/>
                                    </Style>
                                </mah:DropDownButton.ItemContainerStyle>
                            </mah:DropDownButton>
                            <StackPanel.ContextMenu>
                                <ContextMenu ItemsSource="{Binding MenuList}">
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="Icon" Value="{Binding Icon}"/>
                                            <Setter Property="Header" Value="{Binding Header}"/>
                                            <Setter Property="Command" Value="{Binding MenuCommand}"/>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </DataTemplate>
                    <DataTemplate x:Key="LeafTemplate" DataType="{x:Type vm:CommonNodeVM}">
                        <StackPanel Orientation="Horizontal">
                            <tree:TreeListViewExpander x:Name="TreeExpander" Margin="3,0"/>
                            <TextBlock Text="{Binding Code}" VerticalAlignment="Center" Margin="0,0"/>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="3,0"/>
                            <Button Width="22" Height="22" ToolTip="履歴を表示"
                                    Style="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}">
                                <iconPacks:PackIconMaterial Width="12"
                                              Height="12"
                                              Kind="Timetable" />
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="DisplayHistory"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                    </DataTemplate>
                </tree:TreeListView.Resources>
                <tree:TreeListView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}"/>
                </tree:TreeListView.ItemTemplate>
                <tree:TreeListView.Columns>
                    <GridViewColumn Header="項目" Width="auto" CellTemplateSelector="{StaticResource NodeTemplateSelector}">
                    </GridViewColumn>
                    <GridViewColumn Header="現在単価" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PerPrice,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="平均取得単価" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PerBuyPriceAverage,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="取引数" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TradeQuantity,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="保有数" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Quantity,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="時価評価額" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Amount,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="含損益" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding UnrealizedProfitLoss,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="タグ" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Tag.TagName}" HorizontalAlignment="Left"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </tree:TreeListView.Columns>
            </tree:TreeListView>
        </Grid>

    </Grid>
</mah:MetroWindow>
