<UserControl x:Class="PortFolion.Views.ListTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PortFolion.Views"
             xmlns:vm ="clr-namespace:PortFolion.ViewModels"
             xmlns:model="clr-namespace:PortFolion.Models"
             xmlns:selector ="clr-namespace:PortFolion.Views.Selector"
             xmlns:converter="clr-namespace:PortFolion.Views.Converter"
             xmlns:tree="clr-namespace:System.Windows.Controls;assembly=TreeListView"
             xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="1100">
    <Grid>
        <Grid.Resources>
            <converter:PathToStringConverter x:Key="PathToString"/>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="60*" MinWidth="50"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="45*" MinWidth="50"/>
        </Grid.ColumnDefinitions>

        <Expander Grid.Column="0" IsExpanded="True" ExpandDirection="Right" mah:ControlsHelper.ContentCharacterCasing="Normal">
            <Expander.Header>
                <TextBlock Text="Date" TextAlignment="Right">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="270"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
            </Expander.Header>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TreeView Grid.Row="0" x:Name="DateLists" ItemsSource="{Binding DateList}" Style="{StaticResource VirtualisedMetroTreeView}">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
                            <Setter Property="IsExpanded" Value="{Binding IsExpand,Mode=TwoWay}"/>
                            <Setter Property="FontWeight" Value="Normal" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="model:DateTree" ItemsSource="{Binding Children}">
                            <TextBlock Text="{Binding Display,UpdateSourceTrigger=PropertyChanged}" />
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>

                <StackPanel Orientation="Vertical" Grid.Row="1" VerticalAlignment="Top" Margin="0" HorizontalAlignment="Center">
                    <DatePicker
                        x:Name="PickedDate"
                        Margin="5, 3" Text="{Binding SelectedDateText,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                        HorizontalAlignment="Right"
                        mah:TextBoxHelper.UseFloatingWatermark="True"
                        mah:TextBoxHelper.Watermark="Select a date" />
                    <Button Content="新規追加" HorizontalAlignment="Right"
                            Margin="5,3"
                            Command="{Binding AddNewRootCommand}"
                            CommandParameter="{Binding ElementName=PickedDate, Path=SelectedDate}"/>
                </StackPanel>
            </Grid>
        </Expander>

        <Grid Grid.Column="1" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" x:Name="Date" Text="{Binding CurrentDate,StringFormat=yyyy年 M月 d日 (ddd)}" HorizontalAlignment="Center" />
            <Menu Grid.Row="1" HorizontalAlignment="Stretch" >
                <!--<Button Content="開"/>
                <Button Content="閉"/>-->
                <MenuItem Header="開">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ExpandAllNode"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="閉">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="CloseAllNode"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
            </Menu>
            <tree:TreeListView Grid.Row="2" x:Name="LocationTree" AllowsColumnReorder="True" ItemsSource="{Binding Root}">
                <tree:TreeListView.Resources>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Height" Value="16" />
                        <Setter Property="Width" Value="16" />
                        <Setter Property="Margin" Value="1" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid 
                                      Margin="{TemplateBinding Margin}"
                                      Background="Transparent">
                                        <Path x:Name="ExpandPath"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Fill="Transparent"
                                            Stroke="{DynamicResource BlackBrush}"
                                            Data="{DynamicResource TreeArrow}">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource GrayBrush1}" />
                                            <Setter TargetName="ExpandPath" Property="RenderTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource BlackBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource GrayBrush5}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled" Value="False" />
                                                <Condition Property="IsChecked" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource GrayBrush5}" />
                                        </MultiTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ExpandPath" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter TargetName="ExpandPath" Property="Stroke" Value="{DynamicResource AccentColorBrush}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource MetroTreeViewItem}">
                       <Setter Property="IsExpanded" Value="{Binding Path=IsExpand, Mode=TwoWay}" />
                       <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TreeViewItem">
                                    <!--Grid containing the current information and the subnodes.-->
                                    <StackPanel>
                                        <!--Border wrapping the content presenter.-->
                                        <Border x:Name="Bd">
                                            <!--GridViewRowPrsenter containing the current information.-->
                                            <GridViewRowPresenter Content="{TemplateBinding Header}"
                                                                  Columns="{Binding Columns, 
                                                                  RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                  AncestorType=tree:TreeListView}}"/>
                                        </Border>
                                        <!--ItemsPresenter containing the subnodes-->
                                        <ItemsPresenter x:Name="ItemsPresenter" Visibility="Collapsed"/>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <!--Trigger used to show the sub items-->
                                        <Trigger Property="IsExpanded" Value="True">
                                            <Setter TargetName="ItemsPresenter" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        
                                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource BlackColorBrush}" />
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled" Value="False" />
                                                <Condition Property="IsSelected" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.Setters>
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            </MultiTrigger.Setters>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="True" />
                                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                                        </MultiTrigger>
                                        
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>                                
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <selector:NodeTemplateSelector x:Key="NodeTemplateSelector"/>
                    <DataTemplate x:Key="NodeTemplate" DataType="{x:Type vm:CommonNodeVM}">
                        <StackPanel Orientation="Horizontal" >
                            <tree:TreeListViewExpander x:Name="TreeExpander" Margin="3,0"/>
                            <TextBlock Text="{Binding Code}" VerticalAlignment="Center" Margin="0,0"/>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="3,0"/>
                            
                            <mah:DropDownButton VerticalContentAlignment="Center"
                                                Content="{iconPacks:PackIconMaterial Kind=LeadPencil,Width=13,Height=13}" ItemsSource="{Binding MenuList}" >
                                    <mah:DropDownButton.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Icon" Value="{Binding Icon}"/>
                                        <Setter Property="Header" Value="{Binding Header}"/>
                                            <Setter Property="Command" Value="{Binding MenuCommand}"/>
                                        </Style>
                                    </mah:DropDownButton.ItemContainerStyle>
                            </mah:DropDownButton>
                            <StackPanel.ContextMenu>
                                <ContextMenu ItemsSource="{Binding MenuList}">
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="Icon" Value="{Binding Icon}"/>
                                            <Setter Property="Header" Value="{Binding Header}"/>
                                            <Setter Property="Command" Value="{Binding MenuCommand}"/>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </DataTemplate>
                    <DataTemplate x:Key="LeafTemplate" DataType="{x:Type vm:CommonNodeVM}">
                        <StackPanel Orientation="Horizontal">
                            <tree:TreeListViewExpander x:Name="TreeExpander" Margin="3,0"/>
                            <TextBlock Text="{Binding Code}" VerticalAlignment="Center" Margin="0,0"/>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="3,0"/>
                            <Button Width="22" Height="22" Style="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}">
                                <iconPacks:PackIconMaterial Width="13"
                                              Height="13"
                                              Kind="Timetable" />
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="DisplayHistory"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                    </DataTemplate>
                </tree:TreeListView.Resources>
                <tree:TreeListView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}"/>
                </tree:TreeListView.ItemTemplate>
                <tree:TreeListView.Columns>
                    <GridViewColumn Header="項目" Width="auto" CellTemplateSelector="{StaticResource NodeTemplateSelector}">
                    </GridViewColumn>
                    <GridViewColumn Header="現在単価" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PerPrice,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="平均取得単価" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PerBuyPriceAverage,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="取引数" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding TradeQuantity,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="保有数" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Quantity,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="評価額 (比率)" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock HorizontalAlignment="Right">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0:N0} ({1}%)">
                                            <Binding Path="Amount"/>
                                            <Binding Path="AmountRate"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="含み損益" Width="auto">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding UnrealizedProfitLoss,StringFormat={}{0:N0}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </tree:TreeListView.Columns>
            </tree:TreeListView>
            <Grid Grid.Row="3" x:Name="PortFolioResult">
                <!--<TextBlock Text="dumy"/>-->
            </Grid>
        </Grid>
        <GridSplitter Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="5"/>
        <Grid Grid.Column="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="{Binding Path,Converter={StaticResource PathToString}}" Margin="5"/>

            <DataGrid Grid.Row="1" MinWidth="100" Margin="5" ItemsSource="{Binding History}"
                      IsReadOnly="True" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False">
                <DataGrid.Resources>
                    <Style TargetType="DataGridCell" BasedOn="{StaticResource MetroDataGridCell}">
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="日付" Binding="{Binding CurrentDate,StringFormat=yyyy/M/d}"
                                        CanUserReorder="True" CanUserResize="True" CanUserSort="False"/>
                    <DataGridTextColumn Binding="{Binding TradeQuantity}" CanUserReorder="True" CanUserResize="True" CanUserSort="False">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="取引数量" HorizontalAlignment="Center"/>
                                    <TextBlock Text="(+)買付 / (-)売却" FontSize="8" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding InvestmentValue}" CanUserReorder="True" CanUserResize="True" CanUserSort="False">
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="取引額" HorizontalAlignment="Center"/>
                                    <TextBlock Text="(+)買付・入金" FontSize="8" HorizontalAlignment="Center"/>
                                    <TextBlock Text="(-)売却・出金" FontSize="8" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="保有数量" Binding="{Binding Quantity}" 
                                        CanUserReorder="True" CanUserResize="True" CanUserSort="False"/>
                    <DataGridTextColumn Header="時価評価額" Binding="{Binding Amount}" CanUserReorder="True"
                                        CanUserResize="True" CanUserSort="False"/>
                    <DataGridTextColumn Header="含損益" Binding="{Binding UnrealizedProfitLoss,StringFormat={}{0:N0}}"
                                        CanUserReorder="True" CanUserResize="True" CanUserSort="False">
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
